#!/usr/bin/with-contenv bash

# Echo init finish for test runs
if [ -n "${TEST_RUN}" ]; then
	echo '[services.d] done.'
fi

mkdir -p \
	/config/{instances,Steam,.steam}/

# setup symlinks
[[ ! -L /home/abc/.ampdata ]] &&
	ln -sf /config/ /home/abc/.ampdata
[[ ! -L /home/abc/.steam ]] &&
	ln -sf /config/.steam /home/abc/.steam
[[ ! -L /home/abc/Steam ]] &&
	ln -sf /config/Steam /home/abc/Steam

# Copy my custom files
[[ ! -f /usr/sbin/amp ]] &&
	cp /defaults/amp /usr/sbin/amp && chmod +x /usr/sbin/amp

# copy the pre-cached AMPCache from the image
rm -f /config/instances/AMPCache-*.zip
ln -sf /app/amp/AMPCache-*.zip /config/instances/

# set permissions so amp can write to directories
chown -R abc:abc \
	/config/

# ensure a license was set
if [ -z "${LICENCE}" ]; then
	echo "Error: No licence specified. You need to have a valid AMP licence from cubecoders.com specified in the LICENCE environment variable"
	sleep infinity
fi

# create main instance if not exists
if [ ! -d /config/instances/Main ]; then
	echo "Creating main instance"
	s6-setuidgid abc ampinstmgr CreateInstance "${MODULE}" Main 0.0.0.0 8080 "${LICENCE}" "${USERNAME}" "${PASSWORD}"
	FIRSTBOOT="true"
fi

# upgrade instances
OLD=$(cat /config/instances/Main/AMPVersion)

if [ "${AMP_VERSION//./}" -gt "${OLD//./}" ]; then
	echo "Upgrading all instances from $OLD to $NEW"
	s6-setuidgid abc ampinstmgr UpgradeAll
fi

# set main instance to start on boot if not already.
if [ "$FIRSTBOOT" = "true" ]; then
	echo "Ensuring main instance will start on boot"
	s6-setuidgid abc ampinstmgr ShowInstanceInfo Main | grep "Start on Boot" | grep "No" && ampinstmgr SetStartBoot Main || true
fi

# permissions
chown -R abc:abc \
	/config
